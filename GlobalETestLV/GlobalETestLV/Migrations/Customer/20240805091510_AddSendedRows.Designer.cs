// <auto-generated />
using System;
using System.Collections.Generic;
using GlobalETestLV.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GlobalETestLV.Migrations.Customer
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20240805091510_AddSendedRows")]
    partial class AddSendedRows
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GlobalETestLV.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int>("Deposit")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int?>("TimerItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimerItemId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.SendedRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("SendedRows");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.TimerFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeFrom")
                        .HasColumnType("integer");

                    b.Property<int>("AgeTo")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Cities")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("DepositFrom")
                        .HasColumnType("integer");

                    b.Property<int>("DepositTo")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Genders")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TimersFilters");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.TimerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FilterId")
                        .HasColumnType("integer");

                    b.Property<byte>("Priority")
                        .HasColumnType("smallint");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("FilterId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TimersItems");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.Customer", b =>
                {
                    b.HasOne("GlobalETestLV.Core.Entities.TimerItem", "TimerItem")
                        .WithMany("Customers")
                        .HasForeignKey("TimerItemId");

                    b.Navigation("TimerItem");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.SendedRow", b =>
                {
                    b.HasOne("GlobalETestLV.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalETestLV.Core.Entities.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.TimerItem", b =>
                {
                    b.HasOne("GlobalETestLV.Core.Entities.TimerFilter", "Filter")
                        .WithMany("Items")
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalETestLV.Core.Entities.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filter");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.TimerFilter", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GlobalETestLV.Core.Entities.TimerItem", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
